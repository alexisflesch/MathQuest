# Composant : Classement animé (ClassementPodium)

## Objectif
Afficher un podium animé pour les trois premiers étudiants et une liste animée des suivants (rangs 4+), avec une mise à jour visuelle marquante chaque fois qu'une question est "fermée" ou qu'un quiz est terminé.

## Stack technique
- **framer-motion** (lib d'animation unique)
- globals.css pour le css

## Comportement général
- Le classement s’affiche suite à une mise à jour décidée par l’enseignant.
- Les 3 premiers apparaissent sur un **podium animé** : leurs avatars tombent du haut de l’écran avec un petit rebond.
- Le reste du classement (rangs 4 et suivants) s’affiche en liste avec **fade-in + slide-up**.
- Le composant est statique entre les mises à jour.

## Données attendues (props)
```ts
type Props = {
  top3: Array<{ name: string, avatarUrl?: string, score: number }>
  others: Array<{ name: string, score: number }>
}
Fonctionnalités
🎖 Podium (top 3)
Trois colonnes disposées en 2–1–3.

Chaque colonne contient :

Avatar (ou initiales si pas d’image)

Nom de l’étudiant

Score

Rang (🥇, 🥈, 🥉)

Animations framer-motion :
ts
Copy
Edit
initial: { y: -300, opacity: 0 }
animate: { y: 0, opacity: 1 }
transition: { type: 'spring', bounce: 0.4, duration: 1 }
📋 Liste des suivants (rangs ≥ 4)
Affichée sous le podium

Chaque ligne contient :

Rang

Nom

Score

Animations framer-motion :
ts
Copy
Edit
initial: { y: 20, opacity: 0 }
animate: { y: 0, opacity: 1 }
transition: { duration: 0.5, delay: index * 0.1 }
UX / UI
Design responsive : s’adapte à une projection plein écran.

Les avatars peuvent avoir une taille définie (w-16 h-16 par exemple).

Les scores sont bien visibles.

Pas de scroll nécessaire sur 10 lignes max.

Podium centré horizontalement.

Liste des autres en-dessous, centrée.

Non-fonctionnel
Aucune dépendance autre que framer-motion pour l’animation.

Pas de gestion d’état interne (réagit uniquement à un changement de props).

Pas de son/musique (prévu ultérieurement).

Transitions uniquement à la mise à jour des props.